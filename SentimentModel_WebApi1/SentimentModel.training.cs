﻿// This file was auto-generated by ML.NET Model Builder. 
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Microsoft.ML.Data;
using Microsoft.ML.Trainers.FastTree;
using Microsoft.ML.Trainers;
using Microsoft.ML;

namespace SentimentModel_WebApi1
{
    public partial class SentimentModel
    {
        public static ITransformer RetrainPipeline(MLContext context, IDataView trainData)
        {
            var pipeline = BuildPipeline(context);
            var model = pipeline.Fit(trainData);

            return model;
        }

        /// <summary>
        /// build the pipeline that is used from model builder. Use this function to retrain model.
        /// </summary>
        /// <param name="mlContext"></param>
        /// <returns></returns>
        public static IEstimator<ITransformer> BuildPipeline(MLContext mlContext)
        {
            // Data process configuration with pipeline data transformations
            var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@"Date", @"Date")      
                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@"BO", @"BO"),new InputOutputColumnPair(@"BH", @"BH"),new InputOutputColumnPair(@"BL", @"BL"),new InputOutputColumnPair(@"BCh", @"BCh"),new InputOutputColumnPair(@"AO", @"AO"),new InputOutputColumnPair(@"AH", @"AH"),new InputOutputColumnPair(@"AL", @"AL"),new InputOutputColumnPair(@"AC", @"AC"),new InputOutputColumnPair(@"ACh", @"ACh")}))      
                                    .Append(mlContext.Transforms.Text.FeaturizeText(@"Time", @"Time"))      
                                    .Append(mlContext.Transforms.Concatenate(@"Features", new []{@"Date",@"BO",@"BH",@"BL",@"BCh",@"AO",@"AH",@"AL",@"AC",@"ACh",@"Time"}))      
                                    .Append(mlContext.Transforms.NormalizeMinMax(@"Features", @"Features"))      
                                    .Append(mlContext.Regression.Trainers.FastTreeTweedie(new FastTreeTweedieTrainer.Options(){NumberOfLeaves=2884,MinimumExampleCountPerLeaf=33,NumberOfTrees=157,MaximumBinCountPerFeature=404,LearningRate=2E-10F,FeatureFraction=0.385540525843678F,LabelColumnName=@"BC",FeatureColumnName=@"Features"}));

            return pipeline;
        }
    }
}
